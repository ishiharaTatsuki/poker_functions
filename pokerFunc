import os
import pandas as pd
import numpy as np

#・treeをbuildだけして、計算しない状態で保存しておく。
# ・それらを計算して上書き保存するscript.txtを作成するpythonコード。
def tree_build(dir):
    DIR = "D:/20190107_handreview/"
    SCRIPT_FILE = os.path.join(DIR, "script.txt")
    CALC_FILE = 1800

    files = [os.path.join(DIR, file) for file in os.listdir(DIR) if file[-4:] == ".cfr"]
    print(files)

    with open(SCRIPT_FILE, "w") as sc:
        for index, f in enumerate(files,1):
            sc.write("load_tree {}\n".format(f))
            sc.write("go {} seconds\n".format(CALC_FILE))
            sc.write("wait_for_solver\n")
            sc.write("dump_tree {}\n".format(f))
            sc.write("echo {} of {} Done\n\n".format(index, len(files)))


#flop加工
#dir=ボードファイルを保存しているtxt
#作成した後はdf.to_csvなどで保存する
def add_column_board(dir):
    rank_num = {'A': 14, 'K': 13, 'Q': 12, 'J': 11, 'T': 10, '9': 9, '8': 8, '7': 7, '6': 6, '5': 5,
             '4': 4, '3': 3, '2': 2}
    flop = []
    weight = []
    for row in open(dir): #'D:\1755_flops.txt'
        flop.append(row[:6])
        weight.append(int(row[7:].rstrip()))
    df = pd.DataFrame({'flop': flop, 'weight': weight})
    #フロップボード情報カラムを作成
    df['num1'] = df['flop'].str[0]
    df['num2'] = df['flop'].str[2]
    df['num3'] = df['flop'].str[4]
    df['int_num1'] = [rank_num[i] for i in df['num1']]
    df['int_num2'] = [rank_num[i] for i in df['num2']]
    df['int_num3'] = [rank_num[i] for i in df['num3']]
    df['suit1'] = df['flop'].str[1]
    df['suit2'] = df['flop'].str[3]
    df['suit3'] = df['flop'].str[5]

    num_list = [sorted([num1, num2, num3]) for num1, num2, num3 in zip(df['int_num1'],df['int_num2'],df['int_num3'])]

    # フロップボード種類カラムを作成(True, False)
    # 基本board
    df['3paired'] = (df.num1 == df.num2) & (df.num2 == df.num3) & (
             df.num1 == df.num3)
    df['paired'] = (~df['3paired']) & (df.num1 == df.num2) | (
             df.num2 == df.num3)
    df['monotone'] = (df.suit1 == df.suit2) & (df.suit2 == df.suit3)
    df['rainbow'] = (df.suit1 != df.suit2) & (df.suit1 != df.suit3) & (
             df.suit2 != df.suit3)
    df['flash_drow'] = (~df.monotone) & (~df.rainbow)  # towtone_board
    df['straight_drow'] = [True if ((num1 + 1 == num2) & (num2 + 1 != num3)) or ((num2 + 1 == num3) & (num1 + 1 != num2)) else False for num1, num2, num3 in
                                    num_list]
    # A, 2 のstraight_drow
    for i, flag in enumerate(df['straight_drow']):
        if not flag:
            if (num_list[i][2] == 14) & (num_list[i][0] == 2) & (num_list[i][1] != 13):
                # df['straight_drow'][i] = True
                df.iloc[i, df.columns.get_loc('straight_drow')] = True
    # straight_on
    df['straight_on'] = [True if (num1 + 1 == num2) & (num2 + 1 == num3) else False for num1, num2, num3 in num_list]
    # A, 2, 3 のstraight_on
    for i, flag in enumerate(df['straight_drow']):
        if flag:
            if (num_list[i][2] == 14) & (num_list[i][1] == 3) & (num_list[i][0] == 2):
                # df['straight_on'][i] = True
                # df['straight_drow'][i] = False
                df.iloc[i, df.columns.get_loc('straight_on')] = True
                df.iloc[i, df.columns.get_loc('straight_drow')] = False
    df['straight_on'] = df['straight_on'] & (~df['straight_drow'])
    # 複合board
    df['straight_on_flash_drow'] = df['straight_on'] & df['flash_drow']
    df['straight_on_monotone'] = df['straight_on'] & df['monotone']
    df['straight_flash_drow'] = df['straight_drow'] & df['flash_drow']
    df['straight_drow_monotone'] = df['monotone'] & df['straight_drow']
    df['paired_flash_drow'] = df['paired'] & df['flash_drow']
    df['paired_straight_drow'] = df['paired'] & df['straight_drow']
    df['paired_straight_flash_drow'] = df['paired'] & df['straight_flash_drow']
    # A ~ T high
    df['A_high'] = [True if (num3 == 14) & (num2 <= 9) & (num1 <= 9) else False for num1, num2, num3 in
                             num_list]
    df['K_high'] = [True if (num3 == 13) & (num2 <= 9) & (num1 <= 9) else False for num1, num2, num3 in
                             num_list]
    df['Q_high'] = [True if (num3 == 12) & (num2 <= 9) & (num1 <= 9) else False for num1, num2, num3 in
                             num_list]
    df['J_high'] = [True if (num3 == 11) & (num2 <= 9) & (num1 <= 9) else False for num1, num2, num3 in
                             num_list]
    df['T_high'] = [True if (num3 == 10) & (num2 <= 8) & (num1 <= 8) else False for num1, num2, num3 in
                             num_list]
    # 重複boardを再度整理
    df['A_high'] = df['A_high'] & (~df['paired'])
    df['K_high'] = df['K_high'] & (~df['paired'])
    df['Q_high'] = df['Q_high'] & (~df['paired'])
    df['J_high'] = df['J_high'] & (~df['paired'])
    df['T_high'] = df['T_high'] & (~df['paired'])
    # df['straight_drow'] = [True if (num3 == 14) & (num1 == 2) & (num2 != 13) else False
    #                        for num1, num2, num3, flag in num_list]

    return df
# df = add_column_board(r'C:\Users\tatuki\Desktop\flop_1820.txt')
# df.to_csv('./flop_1820.csv')



def make_dck():
 import itertools
 # deck作成
 rank_num = {'A':14, 'K':13, 'Q':12, 'J':11, 'T':10, '9':9, '8':8, '7':7, '6':6, '5':5,
             '4':4, '3':3, '2':2}
 rank_list = list(rank_num)
 suit_list = ['s', 'd', 'c', 'h']

 deck = []
 for r in rank_list:
     for s in suit_list:
         deck.append(r+s)
 print(deck)
 conb = list(itertools.combinations(deck, 2))
 print(conb)

# pio_format 並び順作成
def pio_format_card(view=False):
 card_dic = {'2c': 0, '2d': 1, '2h': 2, '2s': 3, '3c': 4, '3d': 5, '3h': 6, '3s': 7, '4c': 8, '4d': 9, '4h': 10, '4s': 11, '5c': 12, '5d': 13, '5h': 14, '5s': 15, '6c': 16, '6d': 17, '6h': 18, '6s': 19, '7c': 20, '7d': 21, '7h': 22, '7s': 23, '8c': 24, '8d': 25, '8h': 26, '8s': 27, '9c': 28, '9d': 29, '9h': 30, '9s': 31, 'Tc': 32, 'Td': 33, 'Th': 34, 'Ts': 35, 'Jc': 36, 'Jd': 37, 'Jh': 38, 'Js': 39, 'Qc': 40, 'Qd': 41, 'Qh': 42, 'Qs': 43, 'Kc': 44, 'Kd': 45, 'Kh': 46, 'Ks': 47, 'Ac': 48, 'Ad': 49, 'Ah': 50, 'As': 51}
 card_list = []
 for k, v in card_dic.items():
  for k2, v2 in card_dic.items():
   if v > v2:
    str = k + k2
    card_list.append(str)
 if view:
  print("cardlist")
  print(card_list)
  print(len(card_list))

pio_card ={
 '2d2c': 0,
 '2h2c': 0,
 '2h2d': 0,
 '2s2c': 0,
 '2s2d': 0,
 '2s2h': 0,
 '3c2c': 0,
 '3c2d': 0,
 '3c2h': 0,
 '3c2s': 0,
 '3d2c': 0,
 '3d2d': 0,
 '3d2h': 0,
 '3d2s': 0,
 '3d3c': 0,
 '3h2c': 0,
 '3h2d': 0,
 '3h2h': 0,
 '3h2s': 0,
 '3h3c': 0,
 '3h3d': 0,
 '3s2c': 0,
 '3s2d': 0,
 '3s2h': 0,
 '3s2s': 0,
 '3s3c': 0,
 '3s3d': 0,
 '3s3h': 0,
 '4c2c': 0,
 '4c2d': 0,
 '4c2h': 0,
 '4c2s': 0,
 '4c3c': 0,
 '4c3d': 0,
 '4c3h': 0,
 '4c3s': 0,
 '4d2c': 0,
 '4d2d': 0,
 '4d2h': 0,
 '4d2s': 0,
 '4d3c': 0,
 '4d3d': 0,
 '4d3h': 0,
 '4d3s': 0,
 '4d4c': 0,
 '4h2c': 0,
 '4h2d': 0,
 '4h2h': 0,
 '4h2s': 0,
 '4h3c': 0,
 '4h3d': 0,
 '4h3h': 0,
 '4h3s': 0,
 '4h4c': 0,
 '4h4d': 0,
 '4s2c': 0,
 '4s2d': 0,
 '4s2h': 0,
 '4s2s': 0,
 '4s3c': 0,
 '4s3d': 0,
 '4s3h': 0,
 '4s3s': 0,
 '4s4c': 0,
 '4s4d': 0,
 '4s4h': 0,
 '5c2c': 0,
 '5c2d': 0,
 '5c2h': 0,
 '5c2s': 0,
 '5c3c': 0,
 '5c3d': 0,
 '5c3h': 0,
 '5c3s': 0,
 '5c4c': 0,
 '5c4d': 0,
 '5c4h': 0,
 '5c4s': 0,
 '5d2c': 0,
 '5d2d': 0,
 '5d2h': 0,
 '5d2s': 0,
 '5d3c': 0,
 '5d3d': 0,
 '5d3h': 0,
 '5d3s': 0,
 '5d4c': 0,
 '5d4d': 0,
 '5d4h': 0,
 '5d4s': 0,
 '5d5c': 0,
 '5h2c': 0,
 '5h2d': 0,
 '5h2h': 0,
 '5h2s': 0,
 '5h3c': 0,
 '5h3d': 0,
 '5h3h': 0,
 '5h3s': 0,
 '5h4c': 0,
 '5h4d': 0,
 '5h4h': 0,
 '5h4s': 0,
 '5h5c': 0,
 '5h5d': 0,
 '5s2c': 0,
 '5s2d': 0,
 '5s2h': 0,
 '5s2s': 0,
 '5s3c': 0,
 '5s3d': 0,
 '5s3h': 0,
 '5s3s': 0,
 '5s4c': 0,
 '5s4d': 0,
 '5s4h': 0,
 '5s4s': 0,
 '5s5c': 0,
 '5s5d': 0,
 '5s5h': 0,
 '6c2c': 0,
 '6c2d': 0,
 '6c2h': 0,
 '6c2s': 0,
 '6c3c': 0,
 '6c3d': 0,
 '6c3h': 0,
 '6c3s': 0,
 '6c4c': 0,
 '6c4d': 0,
 '6c4h': 0,
 '6c4s': 0,
 '6c5c': 0,
 '6c5d': 0,
 '6c5h': 0,
 '6c5s': 0,
 '6d2c': 0,
 '6d2d': 0,
 '6d2h': 0,
 '6d2s': 0,
 '6d3c': 0,
 '6d3d': 0,
 '6d3h': 0,
 '6d3s': 0,
 '6d4c': 0,
 '6d4d': 0,
 '6d4h': 0,
 '6d4s': 0,
 '6d5c': 0,
 '6d5d': 0,
 '6d5h': 0,
 '6d5s': 0,
 '6d6c': 0,
 '6h2c': 0,
 '6h2d': 0,
 '6h2h': 0,
 '6h2s': 0,
 '6h3c': 0,
 '6h3d': 0,
 '6h3h': 0,
 '6h3s': 0,
 '6h4c': 0,
 '6h4d': 0,
 '6h4h': 0,
 '6h4s': 0,
 '6h5c': 0,
 '6h5d': 0,
 '6h5h': 0,
 '6h5s': 0,
 '6h6c': 0,
 '6h6d': 0,
 '6s2c': 0,
 '6s2d': 0,
 '6s2h': 0,
 '6s2s': 0,
 '6s3c': 0,
 '6s3d': 0,
 '6s3h': 0,
 '6s3s': 0,
 '6s4c': 0,
 '6s4d': 0,
 '6s4h': 0,
 '6s4s': 0,
 '6s5c': 0,
 '6s5d': 0,
 '6s5h': 0,
 '6s5s': 0,
 '6s6c': 0,
 '6s6d': 0,
 '6s6h': 0,
 '7c2c': 0,
 '7c2d': 0,
 '7c2h': 0,
 '7c2s': 0,
 '7c3c': 0,
 '7c3d': 0,
 '7c3h': 0,
 '7c3s': 0,
 '7c4c': 0,
 '7c4d': 0,
 '7c4h': 0,
 '7c4s': 0,
 '7c5c': 0,
 '7c5d': 0,
 '7c5h': 0,
 '7c5s': 0,
 '7c6c': 0,
 '7c6d': 0,
 '7c6h': 0,
 '7c6s': 0,
 '7d2c': 0,
 '7d2d': 0,
 '7d2h': 0,
 '7d2s': 0,
 '7d3c': 0,
 '7d3d': 0,
 '7d3h': 0,
 '7d3s': 0,
 '7d4c': 0,
 '7d4d': 0,
 '7d4h': 0,
 '7d4s': 0,
 '7d5c': 0,
 '7d5d': 0,
 '7d5h': 0,
 '7d5s': 0,
 '7d6c': 0,
 '7d6d': 0,
 '7d6h': 0,
 '7d6s': 0,
 '7d7c': 0,
 '7h2c': 0,
 '7h2d': 0,
 '7h2h': 0,
 '7h2s': 0,
 '7h3c': 0,
 '7h3d': 0,
 '7h3h': 0,
 '7h3s': 0,
 '7h4c': 0,
 '7h4d': 0,
 '7h4h': 0,
 '7h4s': 0,
 '7h5c': 0,
 '7h5d': 0,
 '7h5h': 0,
 '7h5s': 0,
 '7h6c': 0,
 '7h6d': 0,
 '7h6h': 0,
 '7h6s': 0,
 '7h7c': 0,
 '7h7d': 0,
 '7s2c': 0,
 '7s2d': 0,
 '7s2h': 0,
 '7s2s': 0,
 '7s3c': 0,
 '7s3d': 0,
 '7s3h': 0,
 '7s3s': 0,
 '7s4c': 0,
 '7s4d': 0,
 '7s4h': 0,
 '7s4s': 0,
 '7s5c': 0,
 '7s5d': 0,
 '7s5h': 0,
 '7s5s': 0,
 '7s6c': 0,
 '7s6d': 0,
 '7s6h': 0,
 '7s6s': 0,
 '7s7c': 0,
 '7s7d': 0,
 '7s7h': 0,
 '8c2c': 0,
 '8c2d': 0,
 '8c2h': 0,
 '8c2s': 0,
 '8c3c': 0,
 '8c3d': 0,
 '8c3h': 0,
 '8c3s': 0,
 '8c4c': 0,
 '8c4d': 0,
 '8c4h': 0,
 '8c4s': 0,
 '8c5c': 0,
 '8c5d': 0,
 '8c5h': 0,
 '8c5s': 0,
 '8c6c': 0,
 '8c6d': 0,
 '8c6h': 0,
 '8c6s': 0,
 '8c7c': 0,
 '8c7d': 0,
 '8c7h': 0,
 '8c7s': 0,
 '8d2c': 0,
 '8d2d': 0,
 '8d2h': 0,
 '8d2s': 0,
 '8d3c': 0,
 '8d3d': 0,
 '8d3h': 0,
 '8d3s': 0,
 '8d4c': 0,
 '8d4d': 0,
 '8d4h': 0,
 '8d4s': 0,
 '8d5c': 0,
 '8d5d': 0,
 '8d5h': 0,
 '8d5s': 0,
 '8d6c': 0,
 '8d6d': 0,
 '8d6h': 0,
 '8d6s': 0,
 '8d7c': 0,
 '8d7d': 0,
 '8d7h': 0,
 '8d7s': 0,
 '8d8c': 0,
 '8h2c': 0,
 '8h2d': 0,
 '8h2h': 0,
 '8h2s': 0,
 '8h3c': 0,
 '8h3d': 0,
 '8h3h': 0,
 '8h3s': 0,
 '8h4c': 0,
 '8h4d': 0,
 '8h4h': 0,
 '8h4s': 0,
 '8h5c': 0,
 '8h5d': 0,
 '8h5h': 0,
 '8h5s': 0,
 '8h6c': 0,
 '8h6d': 0,
 '8h6h': 0,
 '8h6s': 0,
 '8h7c': 0,
 '8h7d': 0,
 '8h7h': 0,
 '8h7s': 0,
 '8h8c': 0,
 '8h8d': 0,
 '8s2c': 0,
 '8s2d': 0,
 '8s2h': 0,
 '8s2s': 0,
 '8s3c': 0,
 '8s3d': 0,
 '8s3h': 0,
 '8s3s': 0,
 '8s4c': 0,
 '8s4d': 0,
 '8s4h': 0,
 '8s4s': 0,
 '8s5c': 0,
 '8s5d': 0,
 '8s5h': 0,
 '8s5s': 0,
 '8s6c': 0,
 '8s6d': 0,
 '8s6h': 0,
 '8s6s': 0,
 '8s7c': 0,
 '8s7d': 0,
 '8s7h': 0,
 '8s7s': 0,
 '8s8c': 0,
 '8s8d': 0,
 '8s8h': 0,
 '9c2c': 0,
 '9c2d': 0,
 '9c2h': 0,
 '9c2s': 0,
 '9c3c': 0,
 '9c3d': 0,
 '9c3h': 0,
 '9c3s': 0,
 '9c4c': 0,
 '9c4d': 0,
 '9c4h': 0,
 '9c4s': 0,
 '9c5c': 0,
 '9c5d': 0,
 '9c5h': 0,
 '9c5s': 0,
 '9c6c': 0,
 '9c6d': 0,
 '9c6h': 0,
 '9c6s': 0,
 '9c7c': 0,
 '9c7d': 0,
 '9c7h': 0,
 '9c7s': 0,
 '9c8c': 0,
 '9c8d': 0,
 '9c8h': 0,
 '9c8s': 0,
 '9d2c': 0,
 '9d2d': 0,
 '9d2h': 0,
 '9d2s': 0,
 '9d3c': 0,
 '9d3d': 0,
 '9d3h': 0,
 '9d3s': 0,
 '9d4c': 0,
 '9d4d': 0,
 '9d4h': 0,
 '9d4s': 0,
 '9d5c': 0,
 '9d5d': 0,
 '9d5h': 0,
 '9d5s': 0,
 '9d6c': 0,
 '9d6d': 0,
 '9d6h': 0,
 '9d6s': 0,
 '9d7c': 0,
 '9d7d': 0,
 '9d7h': 0,
 '9d7s': 0,
 '9d8c': 0,
 '9d8d': 0,
 '9d8h': 0,
 '9d8s': 0,
 '9d9c': 0,
 '9h2c': 0,
 '9h2d': 0,
 '9h2h': 0,
 '9h2s': 0,
 '9h3c': 0,
 '9h3d': 0,
 '9h3h': 0,
 '9h3s': 0,
 '9h4c': 0,
 '9h4d': 0,
 '9h4h': 0,
 '9h4s': 0,
 '9h5c': 0,
 '9h5d': 0,
 '9h5h': 0,
 '9h5s': 0,
 '9h6c': 0,
 '9h6d': 0,
 '9h6h': 0,
 '9h6s': 0,
 '9h7c': 0,
 '9h7d': 0,
 '9h7h': 0,
 '9h7s': 0,
 '9h8c': 0,
 '9h8d': 0,
 '9h8h': 0,
 '9h8s': 0,
 '9h9c': 0,
 '9h9d': 0,
 '9s2c': 0,
 '9s2d': 0,
 '9s2h': 0,
 '9s2s': 0,
 '9s3c': 0,
 '9s3d': 0,
 '9s3h': 0,
 '9s3s': 0,
 '9s4c': 0,
 '9s4d': 0,
 '9s4h': 0,
 '9s4s': 0,
 '9s5c': 0,
 '9s5d': 0,
 '9s5h': 0,
 '9s5s': 0,
 '9s6c': 0,
 '9s6d': 0,
 '9s6h': 0,
 '9s6s': 0,
 '9s7c': 0,
 '9s7d': 0,
 '9s7h': 0,
 '9s7s': 0,
 '9s8c': 0,
 '9s8d': 0,
 '9s8h': 0,
 '9s8s': 0,
 '9s9c': 0,
 '9s9d': 0,
 '9s9h': 0,
 'Tc2c': 0,
 'Tc2d': 0,
 'Tc2h': 0,
 'Tc2s': 0,
 'Tc3c': 0,
 'Tc3d': 0,
 'Tc3h': 0,
 'Tc3s': 0,
 'Tc4c': 0,
 'Tc4d': 0,
 'Tc4h': 0,
 'Tc4s': 0,
 'Tc5c': 0,
 'Tc5d': 0,
 'Tc5h': 0,
 'Tc5s': 0,
 'Tc6c': 0,
 'Tc6d': 0,
 'Tc6h': 0,
 'Tc6s': 0,
 'Tc7c': 0,
 'Tc7d': 0,
 'Tc7h': 0,
 'Tc7s': 0,
 'Tc8c': 0,
 'Tc8d': 0,
 'Tc8h': 0,
 'Tc8s': 0,
 'Tc9c': 0,
 'Tc9d': 0,
 'Tc9h': 0,
 'Tc9s': 0,
 'Td2c': 0,
 'Td2d': 0,
 'Td2h': 0,
 'Td2s': 0,
 'Td3c': 0,
 'Td3d': 0,
 'Td3h': 0,
 'Td3s': 0,
 'Td4c': 0,
 'Td4d': 0,
 'Td4h': 0,
 'Td4s': 0,
 'Td5c': 0,
 'Td5d': 0,
 'Td5h': 0,
 'Td5s': 0,
 'Td6c': 0,
 'Td6d': 0,
 'Td6h': 0,
 'Td6s': 0,
 'Td7c': 0,
 'Td7d': 0,
 'Td7h': 0,
 'Td7s': 0,
 'Td8c': 0,
 'Td8d': 0,
 'Td8h': 0,
 'Td8s': 0,
 'Td9c': 0,
 'Td9d': 0,
 'Td9h': 0,
 'Td9s': 0,
 'TdTc': 0,
 'Th2c': 0,
 'Th2d': 0,
 'Th2h': 0,
 'Th2s': 0,
 'Th3c': 0,
 'Th3d': 0,
 'Th3h': 0,
 'Th3s': 0,
 'Th4c': 0,
 'Th4d': 0,
 'Th4h': 0,
 'Th4s': 0,
 'Th5c': 0,
 'Th5d': 0,
 'Th5h': 0,
 'Th5s': 0,
 'Th6c': 0,
 'Th6d': 0,
 'Th6h': 0,
 'Th6s': 0,
 'Th7c': 0,
 'Th7d': 0,
 'Th7h': 0,
 'Th7s': 0,
 'Th8c': 0,
 'Th8d': 0,
 'Th8h': 0,
 'Th8s': 0,
 'Th9c': 0,
 'Th9d': 0,
 'Th9h': 0,
 'Th9s': 0,
 'ThTc': 0,
 'ThTd': 0,
 'Ts2c': 0,
 'Ts2d': 0,
 'Ts2h': 0,
 'Ts2s': 0,
 'Ts3c': 0,
 'Ts3d': 0,
 'Ts3h': 0,
 'Ts3s': 0,
 'Ts4c': 0,
 'Ts4d': 0,
 'Ts4h': 0,
 'Ts4s': 0,
 'Ts5c': 0,
 'Ts5d': 0,
 'Ts5h': 0,
 'Ts5s': 0,
 'Ts6c': 0,
 'Ts6d': 0,
 'Ts6h': 0,
 'Ts6s': 0,
 'Ts7c': 0,
 'Ts7d': 0,
 'Ts7h': 0,
 'Ts7s': 0,
 'Ts8c': 0,
 'Ts8d': 0,
 'Ts8h': 0,
 'Ts8s': 0,
 'Ts9c': 0,
 'Ts9d': 0,
 'Ts9h': 0,
 'Ts9s': 0,
 'TsTc': 0,
 'TsTd': 0,
 'TsTh': 0,
 'Jc2c': 0,
 'Jc2d': 0,
 'Jc2h': 0,
 'Jc2s': 0,
 'Jc3c': 0,
 'Jc3d': 0,
 'Jc3h': 0,
 'Jc3s': 0,
 'Jc4c': 0,
 'Jc4d': 0,
 'Jc4h': 0,
 'Jc4s': 0,
 'Jc5c': 0,
 'Jc5d': 0,
 'Jc5h': 0,
 'Jc5s': 0,
 'Jc6c': 0,
 'Jc6d': 0,
 'Jc6h': 0,
 'Jc6s': 0,
 'Jc7c': 0,
 'Jc7d': 0,
 'Jc7h': 0,
 'Jc7s': 0,
 'Jc8c': 0,
 'Jc8d': 0,
 'Jc8h': 0,
 'Jc8s': 0,
 'Jc9c': 0,
 'Jc9d': 0,
 'Jc9h': 0,
 'Jc9s': 0,
 'JcTc': 0,
 'JcTd': 0,
 'JcTh': 0,
 'JcTs': 0,
 'Jd2c': 0,
 'Jd2d': 0,
 'Jd2h': 0,
 'Jd2s': 0,
 'Jd3c': 0,
 'Jd3d': 0,
 'Jd3h': 0,
 'Jd3s': 0,
 'Jd4c': 0,
 'Jd4d': 0,
 'Jd4h': 0,
 'Jd4s': 0,
 'Jd5c': 0,
 'Jd5d': 0,
 'Jd5h': 0,
 'Jd5s': 0,
 'Jd6c': 0,
 'Jd6d': 0,
 'Jd6h': 0,
 'Jd6s': 0,
 'Jd7c': 0,
 'Jd7d': 0,
 'Jd7h': 0,
 'Jd7s': 0,
 'Jd8c': 0,
 'Jd8d': 0,
 'Jd8h': 0,
 'Jd8s': 0,
 'Jd9c': 0,
 'Jd9d': 0,
 'Jd9h': 0,
 'Jd9s': 0,
 'JdTc': 0,
 'JdTd': 0,
 'JdTh': 0,
 'JdTs': 0,
 'JdJc': 0,
 'Jh2c': 0,
 'Jh2d': 0,
 'Jh2h': 0,
 'Jh2s': 0,
 'Jh3c': 0,
 'Jh3d': 0,
 'Jh3h': 0,
 'Jh3s': 0,
 'Jh4c': 0,
 'Jh4d': 0,
 'Jh4h': 0,
 'Jh4s': 0,
 'Jh5c': 0,
 'Jh5d': 0,
 'Jh5h': 0,
 'Jh5s': 0,
 'Jh6c': 0,
 'Jh6d': 0,
 'Jh6h': 0,
 'Jh6s': 0,
 'Jh7c': 0,
 'Jh7d': 0,
 'Jh7h': 0,
 'Jh7s': 0,
 'Jh8c': 0,
 'Jh8d': 0,
 'Jh8h': 0,
 'Jh8s': 0,
 'Jh9c': 0,
 'Jh9d': 0,
 'Jh9h': 0,
 'Jh9s': 0,
 'JhTc': 0,
 'JhTd': 0,
 'JhTh': 0,
 'JhTs': 0,
 'JhJc': 0,
 'JhJd': 0,
 'Js2c': 0,
 'Js2d': 0,
 'Js2h': 0,
 'Js2s': 0,
 'Js3c': 0,
 'Js3d': 0,
 'Js3h': 0,
 'Js3s': 0,
 'Js4c': 0,
 'Js4d': 0,
 'Js4h': 0,
 'Js4s': 0,
 'Js5c': 0,
 'Js5d': 0,
 'Js5h': 0,
 'Js5s': 0,
 'Js6c': 0,
 'Js6d': 0,
 'Js6h': 0,
 'Js6s': 0,
 'Js7c': 0,
 'Js7d': 0,
 'Js7h': 0,
 'Js7s': 0,
 'Js8c': 0,
 'Js8d': 0,
 'Js8h': 0,
 'Js8s': 0,
 'Js9c': 0,
 'Js9d': 0,
 'Js9h': 0,
 'Js9s': 0,
 'JsTc': 0,
 'JsTd': 0,
 'JsTh': 0,
 'JsTs': 0,
 'JsJc': 0,
 'JsJd': 0,
 'JsJh': 0,
 'Qc2c': 0,
 'Qc2d': 0,
 'Qc2h': 0,
 'Qc2s': 0,
 'Qc3c': 0,
 'Qc3d': 0,
 'Qc3h': 0,
 'Qc3s': 0,
 'Qc4c': 0,
 'Qc4d': 0,
 'Qc4h': 0,
 'Qc4s': 0,
 'Qc5c': 0,
 'Qc5d': 0,
 'Qc5h': 0,
 'Qc5s': 0,
 'Qc6c': 0,
 'Qc6d': 0,
 'Qc6h': 0,
 'Qc6s': 0,
 'Qc7c': 0,
 'Qc7d': 0,
 'Qc7h': 0,
 'Qc7s': 0,
 'Qc8c': 0,
 'Qc8d': 0,
 'Qc8h': 0,
 'Qc8s': 0,
 'Qc9c': 0,
 'Qc9d': 0,
 'Qc9h': 0,
 'Qc9s': 0,
 'QcTc': 0,
 'QcTd': 0,
 'QcTh': 0,
 'QcTs': 0,
 'QcJc': 0,
 'QcJd': 0,
 'QcJh': 0,
 'QcJs': 0,
 'Qd2c': 0,
 'Qd2d': 0,
 'Qd2h': 0,
 'Qd2s': 0,
 'Qd3c': 0,
 'Qd3d': 0,
 'Qd3h': 0,
 'Qd3s': 0,
 'Qd4c': 0,
 'Qd4d': 0,
 'Qd4h': 0,
 'Qd4s': 0,
 'Qd5c': 0,
 'Qd5d': 0,
 'Qd5h': 0,
 'Qd5s': 0,
 'Qd6c': 0,
 'Qd6d': 0,
 'Qd6h': 0,
 'Qd6s': 0,
 'Qd7c': 0,
 'Qd7d': 0,
 'Qd7h': 0,
 'Qd7s': 0,
 'Qd8c': 0,
 'Qd8d': 0,
 'Qd8h': 0,
 'Qd8s': 0,
 'Qd9c': 0,
 'Qd9d': 0,
 'Qd9h': 0,
 'Qd9s': 0,
 'QdTc': 0,
 'QdTd': 0,
 'QdTh': 0,
 'QdTs': 0,
 'QdJc': 0,
 'QdJd': 0,
 'QdJh': 0,
 'QdJs': 0,
 'QdQc': 0,
 'Qh2c': 0,
 'Qh2d': 0,
 'Qh2h': 0,
 'Qh2s': 0,
 'Qh3c': 0,
 'Qh3d': 0,
 'Qh3h': 0,
 'Qh3s': 0,
 'Qh4c': 0,
 'Qh4d': 0,
 'Qh4h': 0,
 'Qh4s': 0,
 'Qh5c': 0,
 'Qh5d': 0,
 'Qh5h': 0,
 'Qh5s': 0,
 'Qh6c': 0,
 'Qh6d': 0,
 'Qh6h': 0,
 'Qh6s': 0,
 'Qh7c': 0,
 'Qh7d': 0,
 'Qh7h': 0,
 'Qh7s': 0,
 'Qh8c': 0,
 'Qh8d': 0,
 'Qh8h': 0,
 'Qh8s': 0,
 'Qh9c': 0,
 'Qh9d': 0,
 'Qh9h': 0,
 'Qh9s': 0,
 'QhTc': 0,
 'QhTd': 0,
 'QhTh': 0,
 'QhTs': 0,
 'QhJc': 0,
 'QhJd': 0,
 'QhJh': 0,
 'QhJs': 0,
 'QhQc': 0,
 'QhQd': 0,
 'Qs2c': 0,
 'Qs2d': 0,
 'Qs2h': 0,
 'Qs2s': 0,
 'Qs3c': 0,
 'Qs3d': 0,
 'Qs3h': 0,
 'Qs3s': 0,
 'Qs4c': 0,
 'Qs4d': 0,
 'Qs4h': 0,
 'Qs4s': 0,
 'Qs5c': 0,
 'Qs5d': 0,
 'Qs5h': 0,
 'Qs5s': 0,
 'Qs6c': 0,
 'Qs6d': 0,
 'Qs6h': 0,
 'Qs6s': 0,
 'Qs7c': 0,
 'Qs7d': 0,
 'Qs7h': 0,
 'Qs7s': 0,
 'Qs8c': 0,
 'Qs8d': 0,
 'Qs8h': 0,
 'Qs8s': 0,
 'Qs9c': 0,
 'Qs9d': 0,
 'Qs9h': 0,
 'Qs9s': 0,
 'QsTc': 0,
 'QsTd': 0,
 'QsTh': 0,
 'QsTs': 0,
 'QsJc': 0,
 'QsJd': 0,
 'QsJh': 0,
 'QsJs': 0,
 'QsQc': 0,
 'QsQd': 0,
 'QsQh': 0,
 'Kc2c': 0,
 'Kc2d': 0,
 'Kc2h': 0,
 'Kc2s': 0,
 'Kc3c': 0,
 'Kc3d': 0,
 'Kc3h': 0,
 'Kc3s': 0,
 'Kc4c': 0,
 'Kc4d': 0,
 'Kc4h': 0,
 'Kc4s': 0,
 'Kc5c': 0,
 'Kc5d': 0,
 'Kc5h': 0,
 'Kc5s': 0,
 'Kc6c': 0,
 'Kc6d': 0,
 'Kc6h': 0,
 'Kc6s': 0,
 'Kc7c': 0,
 'Kc7d': 0,
 'Kc7h': 0,
 'Kc7s': 0,
 'Kc8c': 0,
 'Kc8d': 0,
 'Kc8h': 0,
 'Kc8s': 0,
 'Kc9c': 0,
 'Kc9d': 0,
 'Kc9h': 0,
 'Kc9s': 0,
 'KcTc': 0,
 'KcTd': 0,
 'KcTh': 0,
 'KcTs': 0,
 'KcJc': 0,
 'KcJd': 0,
 'KcJh': 0,
 'KcJs': 0,
 'KcQc': 0,
 'KcQd': 0,
 'KcQh': 0,
 'KcQs': 0,
 'Kd2c': 0,
 'Kd2d': 0,
 'Kd2h': 0,
 'Kd2s': 0,
 'Kd3c': 0,
 'Kd3d': 0,
 'Kd3h': 0,
 'Kd3s': 0,
 'Kd4c': 0,
 'Kd4d': 0,
 'Kd4h': 0,
 'Kd4s': 0,
 'Kd5c': 0,
 'Kd5d': 0,
 'Kd5h': 0,
 'Kd5s': 0,
 'Kd6c': 0,
 'Kd6d': 0,
 'Kd6h': 0,
 'Kd6s': 0,
 'Kd7c': 0,
 'Kd7d': 0,
 'Kd7h': 0,
 'Kd7s': 0,
 'Kd8c': 0,
 'Kd8d': 0,
 'Kd8h': 0,
 'Kd8s': 0,
 'Kd9c': 0,
 'Kd9d': 0,
 'Kd9h': 0,
 'Kd9s': 0,
 'KdTc': 0,
 'KdTd': 0,
 'KdTh': 0,
 'KdTs': 0,
 'KdJc': 0,
 'KdJd': 0,
 'KdJh': 0,
 'KdJs': 0,
 'KdQc': 0,
 'KdQd': 0,
 'KdQh': 0,
 'KdQs': 0,
 'KdKc': 0,
 'Kh2c': 0,
 'Kh2d': 0,
 'Kh2h': 0,
 'Kh2s': 0,
 'Kh3c': 0,
 'Kh3d': 0,
 'Kh3h': 0,
 'Kh3s': 0,
 'Kh4c': 0,
 'Kh4d': 0,
 'Kh4h': 0,
 'Kh4s': 0,
 'Kh5c': 0,
 'Kh5d': 0,
 'Kh5h': 0,
 'Kh5s': 0,
 'Kh6c': 0,
 'Kh6d': 0,
 'Kh6h': 0,
 'Kh6s': 0,
 'Kh7c': 0,
 'Kh7d': 0,
 'Kh7h': 0,
 'Kh7s': 0,
 'Kh8c': 0,
 'Kh8d': 0,
 'Kh8h': 0,
 'Kh8s': 0,
 'Kh9c': 0,
 'Kh9d': 0,
 'Kh9h': 0,
 'Kh9s': 0,
 'KhTc': 0,
 'KhTd': 0,
 'KhTh': 0,
 'KhTs': 0,
 'KhJc': 0,
 'KhJd': 0,
 'KhJh': 0,
 'KhJs': 0,
 'KhQc': 0,
 'KhQd': 0,
 'KhQh': 0,
 'KhQs': 0,
 'KhKc': 0,
 'KhKd': 0,
 'Ks2c': 0,
 'Ks2d': 0,
 'Ks2h': 0,
 'Ks2s': 0,
 'Ks3c': 0,
 'Ks3d': 0,
 'Ks3h': 0,
 'Ks3s': 0,
 'Ks4c': 0,
 'Ks4d': 0,
 'Ks4h': 0,
 'Ks4s': 0,
 'Ks5c': 0,
 'Ks5d': 0,
 'Ks5h': 0,
 'Ks5s': 0,
 'Ks6c': 0,
 'Ks6d': 0,
 'Ks6h': 0,
 'Ks6s': 0,
 'Ks7c': 0,
 'Ks7d': 0,
 'Ks7h': 0,
 'Ks7s': 0,
 'Ks8c': 0,
 'Ks8d': 0,
 'Ks8h': 0,
 'Ks8s': 0,
 'Ks9c': 0,
 'Ks9d': 0,
 'Ks9h': 0,
 'Ks9s': 0,
 'KsTc': 0,
 'KsTd': 0,
 'KsTh': 0,
 'KsTs': 0,
 'KsJc': 0,
 'KsJd': 0,
 'KsJh': 0,
 'KsJs': 0,
 'KsQc': 0,
 'KsQd': 0,
 'KsQh': 0,
 'KsQs': 0,
 'KsKc': 0,
 'KsKd': 0,
 'KsKh': 0,
 'Ac2c': 0,
 'Ac2d': 0,
 'Ac2h': 0,
 'Ac2s': 0,
 'Ac3c': 0,
 'Ac3d': 0,
 'Ac3h': 0,
 'Ac3s': 0,
 'Ac4c': 0,
 'Ac4d': 0,
 'Ac4h': 0,
 'Ac4s': 0,
 'Ac5c': 0,
 'Ac5d': 0,
 'Ac5h': 0,
 'Ac5s': 0,
 'Ac6c': 0,
 'Ac6d': 0,
 'Ac6h': 0,
 'Ac6s': 0,
 'Ac7c': 0,
 'Ac7d': 0,
 'Ac7h': 0,
 'Ac7s': 0,
 'Ac8c': 0,
 'Ac8d': 0,
 'Ac8h': 0,
 'Ac8s': 0,
 'Ac9c': 0,
 'Ac9d': 0,
 'Ac9h': 0,
 'Ac9s': 0,
 'AcTc': 0,
 'AcTd': 0,
 'AcTh': 0,
 'AcTs': 0,
 'AcJc': 0,
 'AcJd': 0,
 'AcJh': 0,
 'AcJs': 0,
 'AcQc': 0,
 'AcQd': 0,
 'AcQh': 0,
 'AcQs': 0,
 'AcKc': 0,
 'AcKd': 0,
 'AcKh': 0,
 'AcKs': 0,
 'Ad2c': 0,
 'Ad2d': 0,
 'Ad2h': 0,
 'Ad2s': 0,
 'Ad3c': 0,
 'Ad3d': 0,
 'Ad3h': 0,
 'Ad3s': 0,
 'Ad4c': 0,
 'Ad4d': 0,
 'Ad4h': 0,
 'Ad4s': 0,
 'Ad5c': 0,
 'Ad5d': 0,
 'Ad5h': 0,
 'Ad5s': 0,
 'Ad6c': 0,
 'Ad6d': 0,
 'Ad6h': 0,
 'Ad6s': 0,
 'Ad7c': 0,
 'Ad7d': 0,
 'Ad7h': 0,
 'Ad7s': 0,
 'Ad8c': 0,
 'Ad8d': 0,
 'Ad8h': 0,
 'Ad8s': 0,
 'Ad9c': 0,
 'Ad9d': 0,
 'Ad9h': 0,
 'Ad9s': 0,
 'AdTc': 0,
 'AdTd': 0,
 'AdTh': 0,
 'AdTs': 0,
 'AdJc': 0,
 'AdJd': 0,
 'AdJh': 0,
 'AdJs': 0,
 'AdQc': 0,
 'AdQd': 0,
 'AdQh': 0,
 'AdQs': 0,
 'AdKc': 0,
 'AdKd': 0,
 'AdKh': 0,
 'AdKs': 0,
 'AdAc': 0,
 'Ah2c': 0,
 'Ah2d': 0,
 'Ah2h': 0,
 'Ah2s': 0,
 'Ah3c': 0,
 'Ah3d': 0,
 'Ah3h': 0,
 'Ah3s': 0,
 'Ah4c': 0,
 'Ah4d': 0,
 'Ah4h': 0,
 'Ah4s': 0,
 'Ah5c': 0,
 'Ah5d': 0,
 'Ah5h': 0,
 'Ah5s': 0,
 'Ah6c': 0,
 'Ah6d': 0,
 'Ah6h': 0,
 'Ah6s': 0,
 'Ah7c': 0,
 'Ah7d': 0,
 'Ah7h': 0,
 'Ah7s': 0,
 'Ah8c': 0,
 'Ah8d': 0,
 'Ah8h': 0,
 'Ah8s': 0,
 'Ah9c': 0,
 'Ah9d': 0,
 'Ah9h': 0,
 'Ah9s': 0,
 'AhTc': 0,
 'AhTd': 0,
 'AhTh': 0,
 'AhTs': 0,
 'AhJc': 0,
 'AhJd': 0,
 'AhJh': 0,
 'AhJs': 0,
 'AhQc': 0,
 'AhQd': 0,
 'AhQh': 0,
 'AhQs': 0,
 'AhKc': 0,
 'AhKd': 0,
 'AhKh': 0,
 'AhKs': 0,
 'AhAc': 0,
 'AhAd': 0,
 'As2c': 0,
 'As2d': 0,
 'As2h': 0,
 'As2s': 0,
 'As3c': 0,
 'As3d': 0,
 'As3h': 0,
 'As3s': 0,
 'As4c': 0,
 'As4d': 0,
 'As4h': 0,
 'As4s': 0,
 'As5c': 0,
 'As5d': 0,
 'As5h': 0,
 'As5s': 0,
 'As6c': 0,
 'As6d': 0,
 'As6h': 0,
 'As6s': 0,
 'As7c': 0,
 'As7d': 0,
 'As7h': 0,
 'As7s': 0,
 'As8c': 0,
 'As8d': 0,
 'As8h': 0,
 'As8s': 0,
 'As9c': 0,
 'As9d': 0,
 'As9h': 0,
 'As9s': 0,
 'AsTc': 0,
 'AsTd': 0,
 'AsTh': 0,
 'AsTs': 0,
 'AsJc': 0,
 'AsJd': 0,
 'AsJh': 0,
 'AsJs': 0,
 'AsQc': 0,
 'AsQd': 0,
 'AsQh': 0,
 'AsQs': 0,
 'AsKc': 0,
 'AsKd': 0,
 'AsKh': 0,
 'AsKs': 0,
 'AsAc': 0,
 'AsAd': 0,
 'AsAh': 0}

pio_card_num = {
 1: '2d2c',
 2: '2h2c',
 3: '2h2d',
 4: '2s2c',
 5: '2s2d',
 6: '2s2h',
 7: '3c2c',
 8: '3c2d',
 9: '3c2h',
 10: '3c2s',
 11: '3d2c',
 12: '3d2d',
 13: '3d2h',
 14: '3d2s',
 15: '3d3c',
 16: '3h2c',
 17: '3h2d',
 18: '3h2h',
 19: '3h2s',
 20: '3h3c',
 21: '3h3d',
 22: '3s2c',
 23: '3s2d',
 24: '3s2h',
 25: '3s2s',
 26: '3s3c',
 27: '3s3d',
 28: '3s3h',
 29: '4c2c',
 30: '4c2d',
 31: '4c2h',
 32: '4c2s',
 33: '4c3c',
 34: '4c3d',
 35: '4c3h',
 36: '4c3s',
 37: '4d2c',
 38: '4d2d',
 39: '4d2h',
 40: '4d2s',
 41: '4d3c',
 42: '4d3d',
 43: '4d3h',
 44: '4d3s',
 45: '4d4c',
 46: '4h2c',
 47: '4h2d',
 48: '4h2h',
 49: '4h2s',
 50: '4h3c',
 51: '4h3d',
 52: '4h3h',
 53: '4h3s',
 54: '4h4c',
 55: '4h4d',
 56: '4s2c',
 57: '4s2d',
 58: '4s2h',
 59: '4s2s',
 60: '4s3c',
 61: '4s3d',
 62: '4s3h',
 63: '4s3s',
 64: '4s4c',
 65: '4s4d',
 66: '4s4h',
 67: '5c2c',
 68: '5c2d',
 69: '5c2h',
 70: '5c2s',
 71: '5c3c',
 72: '5c3d',
 73: '5c3h',
 74: '5c3s',
 75: '5c4c',
 76: '5c4d',
 77: '5c4h',
 78: '5c4s',
 79: '5d2c',
 80: '5d2d',
 81: '5d2h',
 82: '5d2s',
 83: '5d3c',
 84: '5d3d',
 85: '5d3h',
 86: '5d3s',
 87: '5d4c',
 88: '5d4d',
 89: '5d4h',
 90: '5d4s',
 91: '5d5c',
 92: '5h2c',
 93: '5h2d',
 94: '5h2h',
 95: '5h2s',
 96: '5h3c',
 97: '5h3d',
 98: '5h3h',
 99: '5h3s',
 100: '5h4c',
 101: '5h4d',
 102: '5h4h',
 103: '5h4s',
 104: '5h5c',
 105: '5h5d',
 106: '5s2c',
 107: '5s2d',
 108: '5s2h',
 109: '5s2s',
 110: '5s3c',
 111: '5s3d',
 112: '5s3h',
 113: '5s3s',
 114: '5s4c',
 115: '5s4d',
 116: '5s4h',
 117: '5s4s',
 118: '5s5c',
 119: '5s5d',
 120: '5s5h',
 121: '6c2c',
 122: '6c2d',
 123: '6c2h',
 124: '6c2s',
 125: '6c3c',
 126: '6c3d',
 127: '6c3h',
 128: '6c3s',
 129: '6c4c',
 130: '6c4d',
 131: '6c4h',
 132: '6c4s',
 133: '6c5c',
 134: '6c5d',
 135: '6c5h',
 136: '6c5s',
 137: '6d2c',
 138: '6d2d',
 139: '6d2h',
 140: '6d2s',
 141: '6d3c',
 142: '6d3d',
 143: '6d3h',
 144: '6d3s',
 145: '6d4c',
 146: '6d4d',
 147: '6d4h',
 148: '6d4s',
 149: '6d5c',
 150: '6d5d',
 151: '6d5h',
 152: '6d5s',
 153: '6d6c',
 154: '6h2c',
 155: '6h2d',
 156: '6h2h',
 157: '6h2s',
 158: '6h3c',
 159: '6h3d',
 160: '6h3h',
 161: '6h3s',
 162: '6h4c',
 163: '6h4d',
 164: '6h4h',
 165: '6h4s',
 166: '6h5c',
 167: '6h5d',
 168: '6h5h',
 169: '6h5s',
 170: '6h6c',
 171: '6h6d',
 172: '6s2c',
 173: '6s2d',
 174: '6s2h',
 175: '6s2s',
 176: '6s3c',
 177: '6s3d',
 178: '6s3h',
 179: '6s3s',
 180: '6s4c',
 181: '6s4d',
 182: '6s4h',
 183: '6s4s',
 184: '6s5c',
 185: '6s5d',
 186: '6s5h',
 187: '6s5s',
 188: '6s6c',
 189: '6s6d',
 190: '6s6h',
 191: '7c2c',
 192: '7c2d',
 193: '7c2h',
 194: '7c2s',
 195: '7c3c',
 196: '7c3d',
 197: '7c3h',
 198: '7c3s',
 199: '7c4c',
 200: '7c4d',
 201: '7c4h',
 202: '7c4s',
 203: '7c5c',
 204: '7c5d',
 205: '7c5h',
 206: '7c5s',
 207: '7c6c',
 208: '7c6d',
 209: '7c6h',
 210: '7c6s',
 211: '7d2c',
 212: '7d2d',
 213: '7d2h',
 214: '7d2s',
 215: '7d3c',
 216: '7d3d',
 217: '7d3h',
 218: '7d3s',
 219: '7d4c',
 220: '7d4d',
 221: '7d4h',
 222: '7d4s',
 223: '7d5c',
 224: '7d5d',
 225: '7d5h',
 226: '7d5s',
 227: '7d6c',
 228: '7d6d',
 229: '7d6h',
 230: '7d6s',
 231: '7d7c',
 232: '7h2c',
 233: '7h2d',
 234: '7h2h',
 235: '7h2s',
 236: '7h3c',
 237: '7h3d',
 238: '7h3h',
 239: '7h3s',
 240: '7h4c',
 241: '7h4d',
 242: '7h4h',
 243: '7h4s',
 244: '7h5c',
 245: '7h5d',
 246: '7h5h',
 247: '7h5s',
 248: '7h6c',
 249: '7h6d',
 250: '7h6h',
 251: '7h6s',
 252: '7h7c',
 253: '7h7d',
 254: '7s2c',
 255: '7s2d',
 256: '7s2h',
 257: '7s2s',
 258: '7s3c',
 259: '7s3d',
 260: '7s3h',
 261: '7s3s',
 262: '7s4c',
 263: '7s4d',
 264: '7s4h',
 265: '7s4s',
 266: '7s5c',
 267: '7s5d',
 268: '7s5h',
 269: '7s5s',
 270: '7s6c',
 271: '7s6d',
 272: '7s6h',
 273: '7s6s',
 274: '7s7c',
 275: '7s7d',
 276: '7s7h',
 277: '8c2c',
 278: '8c2d',
 279: '8c2h',
 280: '8c2s',
 281: '8c3c',
 282: '8c3d',
 283: '8c3h',
 284: '8c3s',
 285: '8c4c',
 286: '8c4d',
 287: '8c4h',
 288: '8c4s',
 289: '8c5c',
 290: '8c5d',
 291: '8c5h',
 292: '8c5s',
 293: '8c6c',
 294: '8c6d',
 295: '8c6h',
 296: '8c6s',
 297: '8c7c',
 298: '8c7d',
 299: '8c7h',
 300: '8c7s',
 301: '8d2c',
 302: '8d2d',
 303: '8d2h',
 304: '8d2s',
 305: '8d3c',
 306: '8d3d',
 307: '8d3h',
 308: '8d3s',
 309: '8d4c',
 310: '8d4d',
 311: '8d4h',
 312: '8d4s',
 313: '8d5c',
 314: '8d5d',
 315: '8d5h',
 316: '8d5s',
 317: '8d6c',
 318: '8d6d',
 319: '8d6h',
 320: '8d6s',
 321: '8d7c',
 322: '8d7d',
 323: '8d7h',
 324: '8d7s',
 325: '8d8c',
 326: '8h2c',
 327: '8h2d',
 328: '8h2h',
 329: '8h2s',
 330: '8h3c',
 331: '8h3d',
 332: '8h3h',
 333: '8h3s',
 334: '8h4c',
 335: '8h4d',
 336: '8h4h',
 337: '8h4s',
 338: '8h5c',
 339: '8h5d',
 340: '8h5h',
 341: '8h5s',
 342: '8h6c',
 343: '8h6d',
 344: '8h6h',
 345: '8h6s',
 346: '8h7c',
 347: '8h7d',
 348: '8h7h',
 349: '8h7s',
 350: '8h8c',
 351: '8h8d',
 352: '8s2c',
 353: '8s2d',
 354: '8s2h',
 355: '8s2s',
 356: '8s3c',
 357: '8s3d',
 358: '8s3h',
 359: '8s3s',
 360: '8s4c',
 361: '8s4d',
 362: '8s4h',
 363: '8s4s',
 364: '8s5c',
 365: '8s5d',
 366: '8s5h',
 367: '8s5s',
 368: '8s6c',
 369: '8s6d',
 370: '8s6h',
 371: '8s6s',
 372: '8s7c',
 373: '8s7d',
 374: '8s7h',
 375: '8s7s',
 376: '8s8c',
 377: '8s8d',
 378: '8s8h',
 379: '9c2c',
 380: '9c2d',
 381: '9c2h',
 382: '9c2s',
 383: '9c3c',
 384: '9c3d',
 385: '9c3h',
 386: '9c3s',
 387: '9c4c',
 388: '9c4d',
 389: '9c4h',
 390: '9c4s',
 391: '9c5c',
 392: '9c5d',
 393: '9c5h',
 394: '9c5s',
 395: '9c6c',
 396: '9c6d',
 397: '9c6h',
 398: '9c6s',
 399: '9c7c',
 400: '9c7d',
 401: '9c7h',
 402: '9c7s',
 403: '9c8c',
 404: '9c8d',
 405: '9c8h',
 406: '9c8s',
 407: '9d2c',
 408: '9d2d',
 409: '9d2h',
 410: '9d2s',
 411: '9d3c',
 412: '9d3d',
 413: '9d3h',
 414: '9d3s',
 415: '9d4c',
 416: '9d4d',
 417: '9d4h',
 418: '9d4s',
 419: '9d5c',
 420: '9d5d',
 421: '9d5h',
 422: '9d5s',
 423: '9d6c',
 424: '9d6d',
 425: '9d6h',
 426: '9d6s',
 427: '9d7c',
 428: '9d7d',
 429: '9d7h',
 430: '9d7s',
 431: '9d8c',
 432: '9d8d',
 433: '9d8h',
 434: '9d8s',
 435: '9d9c',
 436: '9h2c',
 437: '9h2d',
 438: '9h2h',
 439: '9h2s',
 440: '9h3c',
 441: '9h3d',
 442: '9h3h',
 443: '9h3s',
 444: '9h4c',
 445: '9h4d',
 446: '9h4h',
 447: '9h4s',
 448: '9h5c',
 449: '9h5d',
 450: '9h5h',
 451: '9h5s',
 452: '9h6c',
 453: '9h6d',
 454: '9h6h',
 455: '9h6s',
 456: '9h7c',
 457: '9h7d',
 458: '9h7h',
 459: '9h7s',
 460: '9h8c',
 461: '9h8d',
 462: '9h8h',
 463: '9h8s',
 464: '9h9c',
 465: '9h9d',
 466: '9s2c',
 467: '9s2d',
 468: '9s2h',
 469: '9s2s',
 470: '9s3c',
 471: '9s3d',
 472: '9s3h',
 473: '9s3s',
 474: '9s4c',
 475: '9s4d',
 476: '9s4h',
 477: '9s4s',
 478: '9s5c',
 479: '9s5d',
 480: '9s5h',
 481: '9s5s',
 482: '9s6c',
 483: '9s6d',
 484: '9s6h',
 485: '9s6s',
 486: '9s7c',
 487: '9s7d',
 488: '9s7h',
 489: '9s7s',
 490: '9s8c',
 491: '9s8d',
 492: '9s8h',
 493: '9s8s',
 494: '9s9c',
 495: '9s9d',
 496: '9s9h',
 497: 'Tc2c',
 498: 'Tc2d',
 499: 'Tc2h',
 500: 'Tc2s',
 501: 'Tc3c',
 502: 'Tc3d',
 503: 'Tc3h',
 504: 'Tc3s',
 505: 'Tc4c',
 506: 'Tc4d',
 507: 'Tc4h',
 508: 'Tc4s',
 509: 'Tc5c',
 510: 'Tc5d',
 511: 'Tc5h',
 512: 'Tc5s',
 513: 'Tc6c',
 514: 'Tc6d',
 515: 'Tc6h',
 516: 'Tc6s',
 517: 'Tc7c',
 518: 'Tc7d',
 519: 'Tc7h',
 520: 'Tc7s',
 521: 'Tc8c',
 522: 'Tc8d',
 523: 'Tc8h',
 524: 'Tc8s',
 525: 'Tc9c',
 526: 'Tc9d',
 527: 'Tc9h',
 528: 'Tc9s',
 529: 'Td2c',
 530: 'Td2d',
 531: 'Td2h',
 532: 'Td2s',
 533: 'Td3c',
 534: 'Td3d',
 535: 'Td3h',
 536: 'Td3s',
 537: 'Td4c',
 538: 'Td4d',
 539: 'Td4h',
 540: 'Td4s',
 541: 'Td5c',
 542: 'Td5d',
 543: 'Td5h',
 544: 'Td5s',
 545: 'Td6c',
 546: 'Td6d',
 547: 'Td6h',
 548: 'Td6s',
 549: 'Td7c',
 550: 'Td7d',
 551: 'Td7h',
 552: 'Td7s',
 553: 'Td8c',
 554: 'Td8d',
 555: 'Td8h',
 556: 'Td8s',
 557: 'Td9c',
 558: 'Td9d',
 559: 'Td9h',
 560: 'Td9s',
 561: 'TdTc',
 562: 'Th2c',
 563: 'Th2d',
 564: 'Th2h',
 565: 'Th2s',
 566: 'Th3c',
 567: 'Th3d',
 568: 'Th3h',
 569: 'Th3s',
 570: 'Th4c',
 571: 'Th4d',
 572: 'Th4h',
 573: 'Th4s',
 574: 'Th5c',
 575: 'Th5d',
 576: 'Th5h',
 577: 'Th5s',
 578: 'Th6c',
 579: 'Th6d',
 580: 'Th6h',
 581: 'Th6s',
 582: 'Th7c',
 583: 'Th7d',
 584: 'Th7h',
 585: 'Th7s',
 586: 'Th8c',
 587: 'Th8d',
 588: 'Th8h',
 589: 'Th8s',
 590: 'Th9c',
 591: 'Th9d',
 592: 'Th9h',
 593: 'Th9s',
 594: 'ThTc',
 595: 'ThTd',
 596: 'Ts2c',
 597: 'Ts2d',
 598: 'Ts2h',
 599: 'Ts2s',
 600: 'Ts3c',
 601: 'Ts3d',
 602: 'Ts3h',
 603: 'Ts3s',
 604: 'Ts4c',
 605: 'Ts4d',
 606: 'Ts4h',
 607: 'Ts4s',
 608: 'Ts5c',
 609: 'Ts5d',
 610: 'Ts5h',
 611: 'Ts5s',
 612: 'Ts6c',
 613: 'Ts6d',
 614: 'Ts6h',
 615: 'Ts6s',
 616: 'Ts7c',
 617: 'Ts7d',
 618: 'Ts7h',
 619: 'Ts7s',
 620: 'Ts8c',
 621: 'Ts8d',
 622: 'Ts8h',
 623: 'Ts8s',
 624: 'Ts9c',
 625: 'Ts9d',
 626: 'Ts9h',
 627: 'Ts9s',
 628: 'TsTc',
 629: 'TsTd',
 630: 'TsTh',
 631: 'Jc2c',
 632: 'Jc2d',
 633: 'Jc2h',
 634: 'Jc2s',
 635: 'Jc3c',
 636: 'Jc3d',
 637: 'Jc3h',
 638: 'Jc3s',
 639: 'Jc4c',
 640: 'Jc4d',
 641: 'Jc4h',
 642: 'Jc4s',
 643: 'Jc5c',
 644: 'Jc5d',
 645: 'Jc5h',
 646: 'Jc5s',
 647: 'Jc6c',
 648: 'Jc6d',
 649: 'Jc6h',
 650: 'Jc6s',
 651: 'Jc7c',
 652: 'Jc7d',
 653: 'Jc7h',
 654: 'Jc7s',
 655: 'Jc8c',
 656: 'Jc8d',
 657: 'Jc8h',
 658: 'Jc8s',
 659: 'Jc9c',
 660: 'Jc9d',
 661: 'Jc9h',
 662: 'Jc9s',
 663: 'JcTc',
 664: 'JcTd',
 665: 'JcTh',
 666: 'JcTs',
 667: 'Jd2c',
 668: 'Jd2d',
 669: 'Jd2h',
 670: 'Jd2s',
 671: 'Jd3c',
 672: 'Jd3d',
 673: 'Jd3h',
 674: 'Jd3s',
 675: 'Jd4c',
 676: 'Jd4d',
 677: 'Jd4h',
 678: 'Jd4s',
 679: 'Jd5c',
 680: 'Jd5d',
 681: 'Jd5h',
 682: 'Jd5s',
 683: 'Jd6c',
 684: 'Jd6d',
 685: 'Jd6h',
 686: 'Jd6s',
 687: 'Jd7c',
 688: 'Jd7d',
 689: 'Jd7h',
 690: 'Jd7s',
 691: 'Jd8c',
 692: 'Jd8d',
 693: 'Jd8h',
 694: 'Jd8s',
 695: 'Jd9c',
 696: 'Jd9d',
 697: 'Jd9h',
 698: 'Jd9s',
 699: 'JdTc',
 700: 'JdTd',
 701: 'JdTh',
 702: 'JdTs',
 703: 'JdJc',
 704: 'Jh2c',
 705: 'Jh2d',
 706: 'Jh2h',
 707: 'Jh2s',
 708: 'Jh3c',
 709: 'Jh3d',
 710: 'Jh3h',
 711: 'Jh3s',
 712: 'Jh4c',
 713: 'Jh4d',
 714: 'Jh4h',
 715: 'Jh4s',
 716: 'Jh5c',
 717: 'Jh5d',
 718: 'Jh5h',
 719: 'Jh5s',
 720: 'Jh6c',
 721: 'Jh6d',
 722: 'Jh6h',
 723: 'Jh6s',
 724: 'Jh7c',
 725: 'Jh7d',
 726: 'Jh7h',
 727: 'Jh7s',
 728: 'Jh8c',
 729: 'Jh8d',
 730: 'Jh8h',
 731: 'Jh8s',
 732: 'Jh9c',
 733: 'Jh9d',
 734: 'Jh9h',
 735: 'Jh9s',
 736: 'JhTc',
 737: 'JhTd',
 738: 'JhTh',
 739: 'JhTs',
 740: 'JhJc',
 741: 'JhJd',
 742: 'Js2c',
 743: 'Js2d',
 744: 'Js2h',
 745: 'Js2s',
 746: 'Js3c',
 747: 'Js3d',
 748: 'Js3h',
 749: 'Js3s',
 750: 'Js4c',
 751: 'Js4d',
 752: 'Js4h',
 753: 'Js4s',
 754: 'Js5c',
 755: 'Js5d',
 756: 'Js5h',
 757: 'Js5s',
 758: 'Js6c',
 759: 'Js6d',
 760: 'Js6h',
 761: 'Js6s',
 762: 'Js7c',
 763: 'Js7d',
 764: 'Js7h',
 765: 'Js7s',
 766: 'Js8c',
 767: 'Js8d',
 768: 'Js8h',
 769: 'Js8s',
 770: 'Js9c',
 771: 'Js9d',
 772: 'Js9h',
 773: 'Js9s',
 774: 'JsTc',
 775: 'JsTd',
 776: 'JsTh',
 777: 'JsTs',
 778: 'JsJc',
 779: 'JsJd',
 780: 'JsJh',
 781: 'Qc2c',
 782: 'Qc2d',
 783: 'Qc2h',
 784: 'Qc2s',
 785: 'Qc3c',
 786: 'Qc3d',
 787: 'Qc3h',
 788: 'Qc3s',
 789: 'Qc4c',
 790: 'Qc4d',
 791: 'Qc4h',
 792: 'Qc4s',
 793: 'Qc5c',
 794: 'Qc5d',
 795: 'Qc5h',
 796: 'Qc5s',
 797: 'Qc6c',
 798: 'Qc6d',
 799: 'Qc6h',
 800: 'Qc6s',
 801: 'Qc7c',
 802: 'Qc7d',
 803: 'Qc7h',
 804: 'Qc7s',
 805: 'Qc8c',
 806: 'Qc8d',
 807: 'Qc8h',
 808: 'Qc8s',
 809: 'Qc9c',
 810: 'Qc9d',
 811: 'Qc9h',
 812: 'Qc9s',
 813: 'QcTc',
 814: 'QcTd',
 815: 'QcTh',
 816: 'QcTs',
 817: 'QcJc',
 818: 'QcJd',
 819: 'QcJh',
 820: 'QcJs',
 821: 'Qd2c',
 822: 'Qd2d',
 823: 'Qd2h',
 824: 'Qd2s',
 825: 'Qd3c',
 826: 'Qd3d',
 827: 'Qd3h',
 828: 'Qd3s',
 829: 'Qd4c',
 830: 'Qd4d',
 831: 'Qd4h',
 832: 'Qd4s',
 833: 'Qd5c',
 834: 'Qd5d',
 835: 'Qd5h',
 836: 'Qd5s',
 837: 'Qd6c',
 838: 'Qd6d',
 839: 'Qd6h',
 840: 'Qd6s',
 841: 'Qd7c',
 842: 'Qd7d',
 843: 'Qd7h',
 844: 'Qd7s',
 845: 'Qd8c',
 846: 'Qd8d',
 847: 'Qd8h',
 848: 'Qd8s',
 849: 'Qd9c',
 850: 'Qd9d',
 851: 'Qd9h',
 852: 'Qd9s',
 853: 'QdTc',
 854: 'QdTd',
 855: 'QdTh',
 856: 'QdTs',
 857: 'QdJc',
 858: 'QdJd',
 859: 'QdJh',
 860: 'QdJs',
 861: 'QdQc',
 862: 'Qh2c',
 863: 'Qh2d',
 864: 'Qh2h',
 865: 'Qh2s',
 866: 'Qh3c',
 867: 'Qh3d',
 868: 'Qh3h',
 869: 'Qh3s',
 870: 'Qh4c',
 871: 'Qh4d',
 872: 'Qh4h',
 873: 'Qh4s',
 874: 'Qh5c',
 875: 'Qh5d',
 876: 'Qh5h',
 877: 'Qh5s',
 878: 'Qh6c',
 879: 'Qh6d',
 880: 'Qh6h',
 881: 'Qh6s',
 882: 'Qh7c',
 883: 'Qh7d',
 884: 'Qh7h',
 885: 'Qh7s',
 886: 'Qh8c',
 887: 'Qh8d',
 888: 'Qh8h',
 889: 'Qh8s',
 890: 'Qh9c',
 891: 'Qh9d',
 892: 'Qh9h',
 893: 'Qh9s',
 894: 'QhTc',
 895: 'QhTd',
 896: 'QhTh',
 897: 'QhTs',
 898: 'QhJc',
 899: 'QhJd',
 900: 'QhJh',
 901: 'QhJs',
 902: 'QhQc',
 903: 'QhQd',
 904: 'Qs2c',
 905: 'Qs2d',
 906: 'Qs2h',
 907: 'Qs2s',
 908: 'Qs3c',
 909: 'Qs3d',
 910: 'Qs3h',
 911: 'Qs3s',
 912: 'Qs4c',
 913: 'Qs4d',
 914: 'Qs4h',
 915: 'Qs4s',
 916: 'Qs5c',
 917: 'Qs5d',
 918: 'Qs5h',
 919: 'Qs5s',
 920: 'Qs6c',
 921: 'Qs6d',
 922: 'Qs6h',
 923: 'Qs6s',
 924: 'Qs7c',
 925: 'Qs7d',
 926: 'Qs7h',
 927: 'Qs7s',
 928: 'Qs8c',
 929: 'Qs8d',
 930: 'Qs8h',
 931: 'Qs8s',
 932: 'Qs9c',
 933: 'Qs9d',
 934: 'Qs9h',
 935: 'Qs9s',
 936: 'QsTc',
 937: 'QsTd',
 938: 'QsTh',
 939: 'QsTs',
 940: 'QsJc',
 941: 'QsJd',
 942: 'QsJh',
 943: 'QsJs',
 944: 'QsQc',
 945: 'QsQd',
 946: 'QsQh',
 947: 'Kc2c',
 948: 'Kc2d',
 949: 'Kc2h',
 950: 'Kc2s',
 951: 'Kc3c',
 952: 'Kc3d',
 953: 'Kc3h',
 954: 'Kc3s',
 955: 'Kc4c',
 956: 'Kc4d',
 957: 'Kc4h',
 958: 'Kc4s',
 959: 'Kc5c',
 960: 'Kc5d',
 961: 'Kc5h',
 962: 'Kc5s',
 963: 'Kc6c',
 964: 'Kc6d',
 965: 'Kc6h',
 966: 'Kc6s',
 967: 'Kc7c',
 968: 'Kc7d',
 969: 'Kc7h',
 970: 'Kc7s',
 971: 'Kc8c',
 972: 'Kc8d',
 973: 'Kc8h',
 974: 'Kc8s',
 975: 'Kc9c',
 976: 'Kc9d',
 977: 'Kc9h',
 978: 'Kc9s',
 979: 'KcTc',
 980: 'KcTd',
 981: 'KcTh',
 982: 'KcTs',
 983: 'KcJc',
 984: 'KcJd',
 985: 'KcJh',
 986: 'KcJs',
 987: 'KcQc',
 988: 'KcQd',
 989: 'KcQh',
 990: 'KcQs',
 991: 'Kd2c',
 992: 'Kd2d',
 993: 'Kd2h',
 994: 'Kd2s',
 995: 'Kd3c',
 996: 'Kd3d',
 997: 'Kd3h',
 998: 'Kd3s',
 999: 'Kd4c',
 1000: 'Kd4d',
 1001: 'Kd4h',
 1002: 'Kd4s',
 1003: 'Kd5c',
 1004: 'Kd5d',
 1005: 'Kd5h',
 1006: 'Kd5s',
 1007: 'Kd6c',
 1008: 'Kd6d',
 1009: 'Kd6h',
 1010: 'Kd6s',
 1011: 'Kd7c',
 1012: 'Kd7d',
 1013: 'Kd7h',
 1014: 'Kd7s',
 1015: 'Kd8c',
 1016: 'Kd8d',
 1017: 'Kd8h',
 1018: 'Kd8s',
 1019: 'Kd9c',
 1020: 'Kd9d',
 1021: 'Kd9h',
 1022: 'Kd9s',
 1023: 'KdTc',
 1024: 'KdTd',
 1025: 'KdTh',
 1026: 'KdTs',
 1027: 'KdJc',
 1028: 'KdJd',
 1029: 'KdJh',
 1030: 'KdJs',
 1031: 'KdQc',
 1032: 'KdQd',
 1033: 'KdQh',
 1034: 'KdQs',
 1035: 'KdKc',
 1036: 'Kh2c',
 1037: 'Kh2d',
 1038: 'Kh2h',
 1039: 'Kh2s',
 1040: 'Kh3c',
 1041: 'Kh3d',
 1042: 'Kh3h',
 1043: 'Kh3s',
 1044: 'Kh4c',
 1045: 'Kh4d',
 1046: 'Kh4h',
 1047: 'Kh4s',
 1048: 'Kh5c',
 1049: 'Kh5d',
 1050: 'Kh5h',
 1051: 'Kh5s',
 1052: 'Kh6c',
 1053: 'Kh6d',
 1054: 'Kh6h',
 1055: 'Kh6s',
 1056: 'Kh7c',
 1057: 'Kh7d',
 1058: 'Kh7h',
 1059: 'Kh7s',
 1060: 'Kh8c',
 1061: 'Kh8d',
 1062: 'Kh8h',
 1063: 'Kh8s',
 1064: 'Kh9c',
 1065: 'Kh9d',
 1066: 'Kh9h',
 1067: 'Kh9s',
 1068: 'KhTc',
 1069: 'KhTd',
 1070: 'KhTh',
 1071: 'KhTs',
 1072: 'KhJc',
 1073: 'KhJd',
 1074: 'KhJh',
 1075: 'KhJs',
 1076: 'KhQc',
 1077: 'KhQd',
 1078: 'KhQh',
 1079: 'KhQs',
 1080: 'KhKc',
 1081: 'KhKd',
 1082: 'Ks2c',
 1083: 'Ks2d',
 1084: 'Ks2h',
 1085: 'Ks2s',
 1086: 'Ks3c',
 1087: 'Ks3d',
 1088: 'Ks3h',
 1089: 'Ks3s',
 1090: 'Ks4c',
 1091: 'Ks4d',
 1092: 'Ks4h',
 1093: 'Ks4s',
 1094: 'Ks5c',
 1095: 'Ks5d',
 1096: 'Ks5h',
 1097: 'Ks5s',
 1098: 'Ks6c',
 1099: 'Ks6d',
 1100: 'Ks6h',
 1101: 'Ks6s',
 1102: 'Ks7c',
 1103: 'Ks7d',
 1104: 'Ks7h',
 1105: 'Ks7s',
 1106: 'Ks8c',
 1107: 'Ks8d',
 1108: 'Ks8h',
 1109: 'Ks8s',
 1110: 'Ks9c',
 1111: 'Ks9d',
 1112: 'Ks9h',
 1113: 'Ks9s',
 1114: 'KsTc',
 1115: 'KsTd',
 1116: 'KsTh',
 1117: 'KsTs',
 1118: 'KsJc',
 1119: 'KsJd',
 1120: 'KsJh',
 1121: 'KsJs',
 1122: 'KsQc',
 1123: 'KsQd',
 1124: 'KsQh',
 1125: 'KsQs',
 1126: 'KsKc',
 1127: 'KsKd',
 1128: 'KsKh',
 1129: 'Ac2c',
 1130: 'Ac2d',
 1131: 'Ac2h',
 1132: 'Ac2s',
 1133: 'Ac3c',
 1134: 'Ac3d',
 1135: 'Ac3h',
 1136: 'Ac3s',
 1137: 'Ac4c',
 1138: 'Ac4d',
 1139: 'Ac4h',
 1140: 'Ac4s',
 1141: 'Ac5c',
 1142: 'Ac5d',
 1143: 'Ac5h',
 1144: 'Ac5s',
 1145: 'Ac6c',
 1146: 'Ac6d',
 1147: 'Ac6h',
 1148: 'Ac6s',
 1149: 'Ac7c',
 1150: 'Ac7d',
 1151: 'Ac7h',
 1152: 'Ac7s',
 1153: 'Ac8c',
 1154: 'Ac8d',
 1155: 'Ac8h',
 1156: 'Ac8s',
 1157: 'Ac9c',
 1158: 'Ac9d',
 1159: 'Ac9h',
 1160: 'Ac9s',
 1161: 'AcTc',
 1162: 'AcTd',
 1163: 'AcTh',
 1164: 'AcTs',
 1165: 'AcJc',
 1166: 'AcJd',
 1167: 'AcJh',
 1168: 'AcJs',
 1169: 'AcQc',
 1170: 'AcQd',
 1171: 'AcQh',
 1172: 'AcQs',
 1173: 'AcKc',
 1174: 'AcKd',
 1175: 'AcKh',
 1176: 'AcKs',
 1177: 'Ad2c',
 1178: 'Ad2d',
 1179: 'Ad2h',
 1180: 'Ad2s',
 1181: 'Ad3c',
 1182: 'Ad3d',
 1183: 'Ad3h',
 1184: 'Ad3s',
 1185: 'Ad4c',
 1186: 'Ad4d',
 1187: 'Ad4h',
 1188: 'Ad4s',
 1189: 'Ad5c',
 1190: 'Ad5d',
 1191: 'Ad5h',
 1192: 'Ad5s',
 1193: 'Ad6c',
 1194: 'Ad6d',
 1195: 'Ad6h',
 1196: 'Ad6s',
 1197: 'Ad7c',
 1198: 'Ad7d',
 1199: 'Ad7h',
 1200: 'Ad7s',
 1201: 'Ad8c',
 1202: 'Ad8d',
 1203: 'Ad8h',
 1204: 'Ad8s',
 1205: 'Ad9c',
 1206: 'Ad9d',
 1207: 'Ad9h',
 1208: 'Ad9s',
 1209: 'AdTc',
 1210: 'AdTd',
 1211: 'AdTh',
 1212: 'AdTs',
 1213: 'AdJc',
 1214: 'AdJd',
 1215: 'AdJh',
 1216: 'AdJs',
 1217: 'AdQc',
 1218: 'AdQd',
 1219: 'AdQh',
 1220: 'AdQs',
 1221: 'AdKc',
 1222: 'AdKd',
 1223: 'AdKh',
 1224: 'AdKs',
 1225: 'AdAc',
 1226: 'Ah2c',
 1227: 'Ah2d',
 1228: 'Ah2h',
 1229: 'Ah2s',
 1230: 'Ah3c',
 1231: 'Ah3d',
 1232: 'Ah3h',
 1233: 'Ah3s',
 1234: 'Ah4c',
 1235: 'Ah4d',
 1236: 'Ah4h',
 1237: 'Ah4s',
 1238: 'Ah5c',
 1239: 'Ah5d',
 1240: 'Ah5h',
 1241: 'Ah5s',
 1242: 'Ah6c',
 1243: 'Ah6d',
 1244: 'Ah6h',
 1245: 'Ah6s',
 1246: 'Ah7c',
 1247: 'Ah7d',
 1248: 'Ah7h',
 1249: 'Ah7s',
 1250: 'Ah8c',
 1251: 'Ah8d',
 1252: 'Ah8h',
 1253: 'Ah8s',
 1254: 'Ah9c',
 1255: 'Ah9d',
 1256: 'Ah9h',
 1257: 'Ah9s',
 1258: 'AhTc',
 1259: 'AhTd',
 1260: 'AhTh',
 1261: 'AhTs',
 1262: 'AhJc',
 1263: 'AhJd',
 1264: 'AhJh',
 1265: 'AhJs',
 1266: 'AhQc',
 1267: 'AhQd',
 1268: 'AhQh',
 1269: 'AhQs',
 1270: 'AhKc',
 1271: 'AhKd',
 1272: 'AhKh',
 1273: 'AhKs',
 1274: 'AhAc',
 1275: 'AhAd',
 1276: 'As2c',
 1277: 'As2d',
 1278: 'As2h',
 1279: 'As2s',
 1280: 'As3c',
 1281: 'As3d',
 1282: 'As3h',
 1283: 'As3s',
 1284: 'As4c',
 1285: 'As4d',
 1286: 'As4h',
 1287: 'As4s',
 1288: 'As5c',
 1289: 'As5d',
 1290: 'As5h',
 1291: 'As5s',
 1292: 'As6c',
 1293: 'As6d',
 1294: 'As6h',
 1295: 'As6s',
 1296: 'As7c',
 1297: 'As7d',
 1298: 'As7h',
 1299: 'As7s',
 1300: 'As8c',
 1301: 'As8d',
 1302: 'As8h',
 1303: 'As8s',
 1304: 'As9c',
 1305: 'As9d',
 1306: 'As9h',
 1307: 'As9s',
 1308: 'AsTc',
 1309: 'AsTd',
 1310: 'AsTh',
 1311: 'AsTs',
 1312: 'AsJc',
 1313: 'AsJd',
 1314: 'AsJh',
 1315: 'AsJs',
 1316: 'AsQc',
 1317: 'AsQd',
 1318: 'AsQh',
 1319: 'AsQs',
 1320: 'AsKc',
 1321: 'AsKd',
 1322: 'AsKh',
 1323: 'AsKs',
 1324: 'AsAc',
 1325: 'AsAd',
 1326: 'AsAh'}

# 入力値 pio_format(piosolver)でコピーし、カンマをつけリスト形式にする
# 強化学習の入力用
def pio_format_range(pio_format=[], view=False):
    for i, v in enumerate(pio_format, 1):
        key = pio_card_num[i]
        pio_card[key] = v
    if view:
        for k, v in pio_card.items():
            if v > 0:
                print(k + ':' + str(v)) # str型 {'AsKd': 0.5,}

    return pio_card



# piosolver確かめ用 input_range={'AsKd': 0.5,}
# pio_formatに変換
def pio_set_range(input_range={}):
 pio_format = []
 for k, v in input_range.items():
  pio_card[k] = v
 # pio_formatに変換
 for _, v in pio_card.items():
  pio_format.append(v)
 #output
 print(pio_format, sep=' ')

# 複数のcsv_fileをマージ
import os
import glob
import csv
import pandas as pd
def file_merge(dir = ""):
    all_file = glob.glob("{}\\*.csv".format(dir))
    list = []
    for file in all_file:
        list.append(pd.read_csv(file))
    df = pd.concat(list, sort=False)

    #del df['Unnamed: 0']

    df.to_csv(dir + "\\total_merge.csv", index=False)

if __name__ == "__main__":
    #df = add_column_board(r'C:\Users\tatuki\Desktop\flop_1820.txt')
    #df.to_csv('./flop_1820.csv')

    file_merge(r"C:\Users\tatuki\Desktop\pio_ML_csvfile")



